"use strict";angular.module("xmlvsApiValidationApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","ui.sortable","LocalStorageModule","ngFileUpload"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/spec.html",controller:"SpecCtrl",controllerAs:"main"}).when("/ingest",{templateUrl:"views/ingest.html",controller:"IngestCtrl",controllerAs:"ingest"}).when("/apiresponse",{templateUrl:"views/apiresponse.html",controller:"ApiResponseCtrl",controllerAs:"apiresponse"}).when("/results",{templateUrl:"views/results.html",controller:"ResultsCtrl",controllerAs:"results",css:"styles/results.css"}).otherwise({redirectTo:"/"})}]),angular.module("xmlvsApiValidationApp").service("specService",function(){var a={},b=[],c={};return c.getSpec=function(){var b={};return b=a.VODspec?a.VODspec:a.EPGspec?a.EPGspec:a},c.setSpec=function(b){a=b},c.unsetSpec=function(){a={}},c.getSpecType=function(){var b;return a.VODspec?b="VOD":a.EPGspec&&(b="EPG"),b},c.validateFieldsVsSpec=function(){},c.getSpecFilesArray=function(){return b},c.setSpecFilesArray=function(a){b=[],b=a},c.addSpecFile=function(a){b.push(a)},c}),angular.module("xmlvsApiValidationApp").service("ingestService",function(){var a={},b=[],c={};return c.getIngestObj=function(){var b={};return b="VOD"===c.getIngestObjType()?a.ADI:"EPG"===c.getIngestObjType()?a.TV:a},c.setIngestObj=function(b){a=b},c.unsetIngestObj=function(){a={}},c.getIngestObjType=function(){var b;return a.ADI?b="VOD":a.TV&&(b="EPG"),b},c.getVodAssetType=function(){var b="Unknown";return a.assetType&&(b=a.assetType),b},c.setVodAssetType=function(b){a.assetType=b},c.getIngestFilesArray=function(){return b},c.setIngestFilesArray=function(a){b=[],b=a},c.addIngestFile=function(a){b.push(a)},c.unsetIngestFilesArray=function(){b=[]},c}),angular.module("xmlvsApiValidationApp").service("apiResponseService",function(){var a={},b=[],c={};return c.getApiResponse=function(){return a},c.setApiResponse=function(b){a=b},c.unsetApiResponse=function(){a={}},c.getApiFilesArray=function(){return b},c.setApiFilesArray=function(a){b=[],b=a},c.addApiFile=function(a){b.push(a)},c.unsetApiFilesArray=function(){b=[]},c}),angular.module("xmlvsApiValidationApp").service("resultsService",function(){var a={},b={};return b.getResults=function(){return a},b.setResults=function(b){a=b},b.setResultType=function(b){a.type=b},b.getResultType=function(){return a.type},b}),angular.module("xmlvsApiValidationApp").directive("cssInjector",["$rootScope","$compile",function(a,b){return{restrict:"E",link:function(c,d){var e='<link rel="stylesheet" ng-repeat="(routeCtrl, cssUrl) in routeStyles" ng-href="{{cssUrl}}" />';d.append(b(e)(c)),c.routeStyles={},a.$on("$routeChangeStart",function(a,b,d){d&&d.$$route&&d.$$route.css&&(angular.isArray(d.$$route.css)||(d.$$route.css=[d.$$route.css]),angular.forEach(d.$$route.css,function(a){delete c.routeStyles[a]})),b&&b.$$route&&b.$$route.css&&(angular.isArray(b.$$route.css)||(b.$$route.css=[b.$$route.css]),angular.forEach(b.$$route.css,function(a){c.routeStyles[a]=a}))})}}}]),angular.module("xmlvsApiValidationApp").controller("SpecCtrl",["$scope","Upload","$timeout","$location","specService","apiResponseService","ingestService",function(a,b,c,d,e,f,g){function h(){console.log("ENTRA-init()"),a.files=e.getSpecFilesArray(),console.log("$scope.files - AFTER"),console.log(a.files),a.specUploaded=$.isEmptyObject(e.getSpec())?!1:!0,a.enableErrorAlerts=!0;var b=".nav li";$("#spec-section").hasClass("active")||($(b).removeClass("active"),$("#spec-section").addClass("active"))}function i(){console.log("ENTRA-enableApiNavSection()"),$("#api-section").removeClass("disabled"),$("#api-section").removeProp("disabled")}function j(){console.log("ENTRA-enableIngestNavSection()"),$("#ingest-section").removeClass("disabled"),$("#ingest-section").removeProp("disabled")}function k(){f.unsetApiResponse(),f.unsetApiFilesArray(),$("#api-section").addClass("disabled")}function l(){g.unsetIngestObj(),g.unsetIngestFilesArray(),$("#ingest-section").addClass("disabled")}function m(a){console.log("ENTRA-xmlToJson()");var b={};if(1===a.nodeType){if(a.attributes.length>0){b["@attributes"]={};for(var c=0;c<a.attributes.length;c++){var d=a.attributes.item(c);b["@attributes"][d.nodeName]=d.nodeValue}}}else 3===a.nodeType&&(b=a.nodeValue);if(a.hasChildNodes())for(var e=0;e<a.childNodes.length;e++){var f=a.childNodes.item(e),g=f.nodeName;if("undefined"==typeof b[g])b[g]=m(f);else{if("undefined"==typeof b[g].push){var h=b[g];b[g]=[],b[g].push(h)}b[g].push(m(f))}}return b}$(document).ready(function(){h()}),a.$watch("file",function(){console.log("$scope.$watch -> $scope.file"),a.enableErrorAlerts=!0,null!=a.file&&(a.files=[a.file]),$.isEmptyObject(e.getSpec())&&a.upload(a.files)}),a.removeErrorAlerts=function(){a.enableErrorAlerts=!1},a.deleteFile=function(b){console.log("ENTRA-deleteFile()"),a.files=$.grep(a.files,function(a){return a.name!==b}),0===a.files.length&&(e.unsetSpec(),a.specUploaded=!1,k(),l()),e.setSpecFilesArray(a.files)},a.upload=function(b){if(console.log("ENTRA-upload()"),b&&b.length)for(var c=0;c<b.length;c++){var d=b[c],f=new FileReader;f.readAsBinaryString(d),f.onloadend=function(){try{i(),j();var b=$.parseXML(f.result),c=m(b);c&&(console.log("Specification Object: "),console.log(c),a.specUploaded=!0,e.setSpec(c),e.addSpecFile(d))}catch(g){console.log("err.message"),console.log(g.message)}}}},a.goToApiSection=function(){console.log("ENTRA-goToApiSection()"),d.url("/apiresponse")}}]),angular.module("xmlvsApiValidationApp").controller("IngestCtrl",["$scope","Upload","$timeout","$location","specService","apiResponseService","ingestService","resultsService",function(a,b,c,d,e,f,g,h){function i(){console.log("ENTRA-init()"),a.files=g.getIngestFilesArray(),a.ingestFileUploaded=$.isEmptyObject(g.getIngestObj())?!1:!0,a.enableErrorAlerts=!0;var b=".nav li";$("#ingest-section").hasClass("active")||($(b).removeClass("active"),$("#ingest-section").addClass("active"))}function j(){console.log("ENTER-getEPGIngestFields()");var a,b,c=[],d=[],e=-1,f=-1,h=0,i=g.getIngestObj().programme;return console.log("epgIngestObj"),console.log(i),i&&($.each(i,function(g,i){d.fieldsArray=Object.keys(i),e=d.fieldsArray.indexOf("#text"),f=d.fieldsArray.indexOf("@attributes"),e>-1&&d.fieldsArray.splice(e,1),f>-1&&d.fieldsArray.splice(f,1),i["@attributes"]&&$.merge(d.fieldsArray,Object.keys(i["@attributes"])),i.title&&(a=i.title["#text"]),i.program_id&&(b=i.program_id["#text"]),a?d.name=b?a+"|"+b:a+"|NoId#"+h++:d.name=b?b:"|NoId#"+h++,c.push(d),d={},a=null,b=null,e=-1,f=-1}),console.log("epgAllEventsFieldsArray"),console.log(c)),c}function k(){console.log("ENTRA-getVODIngestFields()");var a,b,c=[],d="",e={},f=[],h={},i={};return g.getIngestObj()&&(c.push([g.getIngestObj()]),c.push([g.getIngestObj().Asset]),c.push(g.getIngestObj().Asset.Asset),$.each(c,function(c,g){g&&($.each(g,function(c,g){a=g.Metadata.AMS["@attributes"],d=a.Asset_Class,a&&(e[d]=Object.keys(a)),a=null,b=g.Metadata.App_Data,b&&(b.constructor===Array?$.each(b,function(a,b){b["@attributes"].Name&&f.push(b["@attributes"].Name)}):b.constructor!==Array&&"object"==typeof b&&f.push(b["@attributes"].Name),h[d]=f),b=null,f=[]}),i.assetAMSfieldsObj=e,i.assetAppDataFieldsObj=h)})),i}function l(a){console.log("ENTRA-xmlToJson()");var b={};if(1===a.nodeType){if(a.attributes.length>0){b["@attributes"]={};for(var c=0;c<a.attributes.length;c++){var d=a.attributes.item(c);b["@attributes"][d.nodeName]=d.nodeValue}}}else 3===a.nodeType&&(b=a.nodeValue);if(a.hasChildNodes())for(var e=0;e<a.childNodes.length;e++){var f=a.childNodes.item(e),g=f.nodeName;if("undefined"==typeof b[g])b[g]=l(f);else{if("undefined"==typeof b[g].push){var h=b[g];b[g]=[],b[g].push(h)}b[g].push(l(f))}}return b}function m(){d.url("/results")}function n(){console.log("FUNCTION: enableResultsNavSection"),$("#results-section").removeClass("disabled"),$("#results-section").removeProp("disabled")}function o(){var a="",b=g.getIngestObj(),c=b.Asset.Metadata.App_Data;return c&&(c.constructor===Array&&c.length>0?$.each(c,function(b,c){c["@attributes"].Name&&"Media_type"===c["@attributes"].Name&&(a=c["@attributes"].Value)}):"object"!=typeof c||$.isEmptyObject(c)||c["@attributes"].Name&&"Media_type"===c["@attributes"].Name&&(a=c["@attributes"].Value)),a}function p(a,b,c,d){var e,f="Unknown";return c["@attributes"]&&(e=c["@attributes"].required?c["@attributes"].required:"","Y"===e?f=$.inArray(a,d)>=0?"OK":"NOK":"N"===e?f=$.inArray(a,d)>=0?"OK":"M&NR":"E"===e&&(f="Episode"===b?$.inArray(a,d)>=0?"OK":"NOK":$.inArray(a,d)>=0?"OK":"M&NR")),f}$(document).ready(function(){i()}),a.goToResultsSection=function(){console.log("ENTRA-goToResultsSection()"),d.url("/results")},a.$watch("file",function(){console.log("$scope.$watch -> $scope.files"),a.enableErrorAlerts=!0,null!=a.file&&(a.files=[a.file]),$.isEmptyObject(g.getIngestObj())&&a.upload(a.files)}),a.removeErrorAlerts=function(){a.enableErrorAlerts=!1},a.deleteFile=function(b){console.log("ENTRA-deleteFile()"),a.files=$.grep(a.files,function(a){return a.name!==b}),0===a.files.length&&(g.unsetIngestObj(),a.ingestFileUploaded=!1),g.setIngestFilesArray(a.files)},a.upload=function(b){if(console.log("ENTRA-upload()"),b&&b.length)for(var c=0;c<b.length;c++){var d=b[c],f=new FileReader;f.readAsBinaryString(d),f.onloadend=function(){try{var b=$.parseXML(f.result),c=l(b);c&&(console.log("Specification Object: "),console.log(c),a.ingestFileUploaded=!0,g.setIngestObj(c),g.addIngestFile(d),"EPG"===e.getSpecType()?console.log("Spec is EPG"):"VOD"===e.getSpecType()&&(console.log("Spec is VOD"),console.log("VodAssetType"),console.log(o()),g.setVodAssetType(o())))}catch(h){console.log("err.message"),console.log(h.message)}}}},a.validateIngestFile=function(){var a=e.getSpec(),b=e.getSpecType(),c={};if(console.log("specObject = "),console.log(a),console.log("specType"),console.log(b),"VOD"===b){console.log("VOD VALIDATION:");var d=k();console.log("assetAMSfieldsObj"),console.log(d.assetAMSfieldsObj),console.log("assetAppDataFieldsObj"),console.log(d.assetAppDataFieldsObj);var f=d.assetAMSfieldsObj,i=d.assetAppDataFieldsObj,l={},o=g.getVodAssetType();console.log("vodAssetType"),console.log(o),a&&($.each(a,function(a,b){"#text"!==a&&$.each(b,function(b,d){"#text"!==b&&("AMS"===a?$.each(f,function(a,e){c.field=b,c.status=p(b,o,d,e),c.type="AMS",l[a]&&l[a].constructor===Array?l[a].push(c):l[a]=[c],c={}}):"still-image"===a?(i.poster?(c.field=b,c.status=p(b,o,d,i.poster),c.type="App_Data",l.poster.constructor===Array?l.poster.push(c):l.poster=[c],c={}):l.hasOwnProperty("poster")||(l.poster=[]),i["box cover"]?(c.field=b,c.status=p(b,o,d,i["box cover"]),c.type="App_Data",l["box cover"].constructor===Array?l["box cover"].push(c):l["box cover"]=[c],c={}):l.hasOwnProperty("box cover")||(l["box cover"]=[]),i["background image"]?(c.field=b,c.status=p(b,o,d,i["background image"]),c.type="App_Data",l["background image"].constructor===Array?l["background image"].push(c):l["background image"]=[c],c={}):l.hasOwnProperty("background image")||(l["background image"]=[])):i[a]?(c.field=b,c.status=p(b,o,d,i[a]),c.type="App_Data",l[a]&&l[a].constructor===Array?l[a].push(c):l[a]=[c],c={}):l.hasOwnProperty(a)||(l[a]=[]))})}),console.log("fieldsValidationResultsObj"),console.log(l),h.setResults(l),h.setResultType("INGEST"),n(),m())}else if("EPG"===b){console.log("EPG VALIDATION:");var q=j(),r="Unknown",s={};a&&$.each(a,function(a,b){"#text"!==a&&"#comment"!==a&&$.each(q,function(d,e){c.field=a,r=e["series-id"]?"Episode":"Event",c.status=p(a,r,b,e.fieldsArray),s[e.name]&&s[e.name].constructor===Array?s[e.name].push(c):s[e.name]=[c],c={}})}),h.setResults(s),h.setResultType("INGEST"),n(),m()}}}]),angular.module("xmlvsApiValidationApp").controller("ApiResponseCtrl",["$scope","localStorageService","Upload","$timeout","resultsService","$location","specService","apiResponseService",function(a,b,c,d,e,f,g,h){function i(){console.log("FUNCTION: init()"),a.apiFiles=h.getApiFilesArray(),a.apiResponseLoaded=!1,console.log("$scope.apiFiles"),console.log(a.apiFiles),a.apiResponseObject=h.getApiResponse(),a.apiFstLevelKeys=[],a.apiSndLevelKeys=[],a.validationResults=[],a.enableApiFileErrorAlerts=!0;var b=".nav li";$("#api-section").hasClass("active")||($(b).removeClass("active"),$("#api-section").addClass("active"))}function j(){f.url("/results")}function k(){console.log("FUNCTION: checkForMissingFieldsInSpec");var b,c,d,e=g.getSpec(),f=[],h=[],i=[];return $.each(e,function(a){b=e[a],b&&!$.isEmptyObject(b)&&"#text"!==a&&b["@attributes"].fieldApi&&(h.push(b["@attributes"].fieldApi),c=b.altField,c&&h.push(c["@attributes"].fieldApi))}),$.each(a.apiSndLevelKeys,function(a,b){i.push(b.field)}),d=a.apiFstLevelKeys.concat(i),$.each(d,function(a,b){$.inArray(b,h)<0&&f.push(b)}),f}function l(){console.log("FUNCTION: enableResultsNavSection"),$("#results-section").removeClass("disabled"),$("#results-section").removeProp("disabled"),a.specUploaded=!0}function m(){console.log("FUNCTION: getApiFields");var b,c,d,e=g.getSpecType();e&&(c="VOD"===e?"Metas":"metas",d="VOD"===e?"Tags":"tags",$.each(a.apiResponseObject,function(f,g){switch(f){case c:b=g,"VOD"===e?$.each(b,function(b,c){a.apiSndLevelKeys.push({field:c.Key,type:"meta"})}):$.each(b,function(b,c){a.apiSndLevelKeys.push({field:b,type:"meta"})});break;case d:b=g,"VOD"===e?$.each(b,function(b,c){a.apiSndLevelKeys.push({field:c.Key,type:"tag"})}):$.each(b,function(b,c){a.apiSndLevelKeys.push({field:b,type:"tag"})});break;case"extra_params":b=g,$.each(b,function(b,c){a.apiSndLevelKeys.push({field:b,type:"extra"})});break;default:a.apiFstLevelKeys.push(f)}b=[]}))}$(document).ready(function(){i()}),a.$watch("fileApi",function(){console.log("FUNCTION: $scope.$watch"),a.enableApiFileErrorAlerts=!0,null!=a.fileApi&&$.isEmptyObject(h.getApiResponse())&&0===h.getApiFilesArray.length&&(a.apiFiles=a.fileApi,a.uploadAPI(a.fileApi))}),a.removeApiErrorAlerts=function(){console.log("FUNCTION: removeApiErrorAlerts"),a.enableApiFileErrorAlerts=!1},a.uploadAPI=function(b){if(console.log("FUNCTION: uploadAPI"),b&&b.length)for(var c=0;c<b.length;c++){var d=b[c],e=new FileReader;e.readAsBinaryString(d),e.onloadend=function(){console.log("FUNCTION: onloadend");try{var c=$.parseJSON(e.result);c&&(a.apiResponseObject=c,a.apiResponseLoaded=!0,h.setApiResponse(a.apiResponseObject),h.setApiFilesArray(b))}catch(d){console.log("err.message"),console.log(d.message)}}}},a.deleteFile=function(b){console.log("FUNCTION: deleteFile"),a.apiFiles=$.grep(a.apiFiles,function(a){return a.name!==b}),0===a.apiFiles.length&&(h.unsetApiResponse(),a.apiResponseLoaded=!1),h.setApiFilesArray(a.apiFiles)},a.validateApiResponse=function(){console.log("FUNCTION: deleteFile"),m(),console.log("Keys 1st Level: "),console.log(a.apiFstLevelKeys),console.log("Keys 2nd Level: "),console.log(a.apiSndLevelKeys);var b,c=null,d="",f=[],h={},i=g.getSpec(),n=null;$.each(i,function(b,e){if("#text"!==b&&"object"==typeof e&&!$.isEmptyObject(e)&&(c=e["@attributes"],d=c.fieldApi,"Y"===c.required||"N"===c.required)){if(console.log("First level Processing..."),d)switch(h.field=d,c.type){case"Tag":case"Meta":case"Extra":n=$.grep(a.apiSndLevelKeys,function(a){return a.field===d}),h.status=n.length>=1?"OK":"NOK";break;default:h.status=$.inArray(d,a.apiFstLevelKeys)>=0?"OK":"NOK"}else h.field=b,h.status="AFNS";h.specField=b,h.type=c.type,f.push(h),h={},c=null,d="",n=null,e.altField&&(console.log("Second level Processing..."),c=e.altField["@attributes"],d=c.fieldApi,d?(h.field=d,n=$.grep(a.apiSndLevelKeys,function(a){return a.field===d}),h.status=n.length>=1?"OK":"NOK"):(h.field=b,h.status="AFNS"),h.specField=b,h.type=c.type,f.push(h),h={},c=null,d="",n=null)}}),b=k(),$.each(b,function(a,b){f.push({field:b,status:"NIS"})}),e.setResults(f),e.setResultType("API"),l(),j()}}]),angular.module("xmlvsApiValidationApp").controller("ResultsCtrl",["$scope","specService","ingestService","resultsService",function(a,b,c,d){function e(){a.searchField="",a.validationResults=d.getResults(),console.log("validationResults"),console.log(a.validationResults),a.specType=b.getSpecType(),a.resultType=d.getResultType(),a.vodAssetType="","INGEST"===a.resultType&&("VOD"===a.specType?a.vodAssetType=c.getVodAssetType():"EPG"===a.specType&&console.log("INGEST & EPG"));var e=".nav li";$("#results-section").hasClass("active")||($(e).removeClass("active"),$("#results-section").addClass("active"))}$(document).ready(function(){e()}),a.fieldStatusClass=function(a){var b="";switch(a){case"OK":b="btn-success";break;case"NOK":b="btn-danger";break;case"M&NR":b="btn-warning";break;case"AFNS":b="btn-warning";break;case"NIS":b="btn-danger";break;default:b="btn-secondary"}return b},a.focusOnSearchField=function(){$("#searchField").focus()},a.isResultsArrayEmpty=function(a){return 0===a.length}}]),angular.module("xmlvsApiValidationApp").run(["$templateCache",function(a){a.put("views/apiresponse.html",'<div class="container"> <div class="jumbotron"> <h2>Upload your API response file (.json):</h2> </div> <form name="myApiFileForm"> <div name="apiDropbox" ngf-drop ngf-select ng-model="fileApi" class="drop-box" ngf-drag-over-class="\'dragover\'" ngf-multiple="true" ngf-allow-dir="true" ngf-accept="application/json" ngf-pattern="\'.json\'"> Drop .json files here, or click to upload </div> <div ngf-no-file-drop>File Drag/Drop is not supported for this browser</div> <div class="alert alert-danger" ng-show="myApiFileForm.apiDropbox.$error.pattern && enableApiFileErrorAlerts"> <a class="close" aria-label="close" ng-click="removeApiErrorAlerts()">&times;</a> <strong>Error!</strong> The file you tried to upload does not have a .json extension. Please upload a JSON file. </div> <div id="uploaded-file-info" class="alert alert-success" ng-hide="apiFiles.length == 0"> <p>Files uploaded:</p> <ul> <li ng-repeat="f in apiFiles track by $index" style="font:smaller; list-style-type: none"> <span class="glyphicon glyphicon-file" aria-hidden="true"></span> {{f.name}} {{f.$error}} {{f.$errorParam}} <span class="glyphicon glyphicon-remove remove-file-sym" ng-click="deleteFile(f.name)" aria-hidden="true"></span> </li> </ul> </div> <button type="button" class="btn btn-primary btn-lg" ng-hide="apiFiles.length == 0" ng-click="validateApiResponse()">Validate</button> </form> </div>'),a.put("views/ingest.html",'<div class="container"> <div class="jumbotron"> <h2>Upload your ingest file (XML):</h2> </div> <form name="myForm"> <div name="dropbox" ngf-drop ngf-select ng-model="file" class="drop-box" ngf-drag-over-class="\'dragover\'" ngf-multiple="false" ngf-accept="text/xml" ngf-pattern="\'.xml\'"> Drop XML metadata ingest files here, or click to upload </div> <div ngf-no-file-drop>File Drag/Drop is not supported for this browser</div> <div class="alert alert-danger" ng-show="myForm.dropbox.$error.pattern && enableErrorAlerts"> <a class="close" aria-label="close" ng-click="removeErrorAlerts()">&times;</a> <strong>Error!</strong> The file you tried to upload does not have a XML format. Please upload a XML file. </div> <div class="alert alert-success" ng-hide="!files || files.length == 0"> <p>Files uploaded:</p> <ul> <li ng-repeat="f in files track by $index" style="font:smaller; list-style-type: none"> <span class="glyphicon glyphicon-file" aria-hidden="true"></span> {{f.name}} {{f.$error}} {{f.$errorParam}} <span class="glyphicon glyphicon-remove remove-file-sym" ng-click="deleteFile(f.name)" aria-hidden="true"></span> </li> </ul> </div> <button type="button" class="btn btn-primary btn-lg" ng-click="validateIngestFile()" ng-hide="!ingestFileUploaded">Validate</button> </form> </div>'),a.put("views/results.html",'<div class="jumbotron"> <h2>Validation Results</h2> <span>Below is the detailed info of the validation results of the <strong>Kaltura API response</strong> vs <strong>XML Specification</strong> provided to the system :</span> </div> <div> <div class="col-sm-3"> <span><strong>Spec Type: </strong> {{specType}}</span> </div> <div ng-if="resultType === \'INGEST\' && specType === \'VOD\'" class="col-sm-3"> <span><strong>Asset Type: </strong> {{vodAssetType}}</span> </div> <div id="search-group" class="input-group col-sm-4 pull-right"> <input id="searchField" type="text" class="form-control" placeholder="Search for..." ng-model="searchField"> <span class="input-group-btn"> <button class="btn btn-default" type="button" ng-click="focusOnSearchField()"> <span class="glyphicon glyphicon-search" aria-hidden="true"></span> </button> </span> </div> </div> <table ng-if="resultType === \'API\'" class="table table-hover"> <thead> <tr> <th>API Field</th> <th>Correspondent in Spec</th> <th>Type</th> <th>Status</th> </tr> </thead> <tbody> <tr ng-repeat="result in validationResults | orderBy:\'+type\' | filter:searchField"> <td>{{result.field}}</td> <td>{{result.specField}}</td> <td>{{result.type}}</td> <td class="col-sm-2"><button class="btn btn-sm btn-block status-indicator" ng-class="fieldStatusClass(result.status)">{{result.status}}</button></td> </tr> </tbody> </table> <div ng-if="resultType === \'INGEST\' && specType === \'VOD\'" class="asset-class-group"> <div ng-repeat="(assetClass, resultsArray) in validationResults"> <div class="table-container" ng-if="assetClass !== \'type\'"> <h3 class="asset-class">{{assetClass}}</h3> <pre id="missing-notification" ng-if="isResultsArrayEmpty(resultsArray)"> <strong> This Asset Class is not present in the ingest file.</strong></pre> <table ng-if="!isResultsArrayEmpty(resultsArray)" class="table table-hover"> <thead> <tr> <th>Ingest Field</th> <th>Type</th> <th>Status</th> </tr> </thead> <tbody> <tr ng-repeat="result in resultsArray | orderBy:\'+type\' | filter:searchField"> <td>{{result.field}}</td> <td>{{result.type}}</td> <td class="col-sm-2"><button class="btn btn-sm btn-block status-indicator" ng-class="fieldStatusClass(result.status)">{{result.status}}</button></td> </tr> </tbody> </table> </div> </div> </div> <div ng-if="resultType === \'INGEST\' && specType === \'EPG\'" class="asset-class-group"> <div ng-repeat="(eventTitle, resultsArray) in validationResults"> <div class="table-container" ng-if="eventTitle !== \'type\'"> <h3 class="event-title">{{eventTitle}}</h3> <pre id="missing-notification" ng-if="isResultsArrayEmpty(resultsArray)"> <strong> This Asset Class is not present in the ingest file.</strong></pre> <table ng-if="!isResultsArrayEmpty(resultsArray)" class="table table-hover"> <thead> <tr> <th>Ingest Field</th> <th>Status</th> </tr> </thead> <tbody> <tr ng-repeat="result in resultsArray | orderBy:\'+field\' | filter:searchField"> <td>{{result.field}}</td> <td class="col-sm-2"><button class="btn btn-sm btn-block status-indicator" ng-class="fieldStatusClass(result.status)">{{result.status}}</button></td> </tr> </tbody> </table> </div> </div> </div>'),a.put("views/spec.html",'<div class="container"> <div class="jumbotron"> <h2>Upload your spec file (XML):</h2> </div> <form name="myForm"> <div name="dropbox" ngf-drop ngf-select ng-model="file" class="drop-box" ngf-drag-over-class="\'dragover\'" ngf-multiple="false" ngf-accept="text/xml" ngf-pattern="\'.xml\'"> Drop XML metadata specification files here, or click to upload </div> <div ngf-no-file-drop>File Drag/Drop is not supported for this browser</div> <div class="alert alert-danger" ng-show="myForm.dropbox.$error.pattern && enableErrorAlerts"> <a class="close" aria-label="close" ng-click="removeErrorAlerts()">&times;</a> <strong>Error!</strong> The file you tried to upload does not have a XML format. Please upload a XML file. </div> <div class="alert alert-success" ng-hide="!files || files.length == 0"> <p>Files uploaded:</p> <ul> <li ng-repeat="f in files track by $index" style="font:smaller; list-style-type: none"> <span class="glyphicon glyphicon-file" aria-hidden="true"></span> {{f.name}} {{f.$error}} {{f.$errorParam}} <span class="glyphicon glyphicon-remove remove-file-sym" ng-click="deleteFile(f.name)" aria-hidden="true"></span> </li> </ul> </div> <button type="button" class="btn btn-primary btn-lg" ng-click="goToApiSection()" ng-hide="!specUploaded">Continue</button> </form> </div>')}]);